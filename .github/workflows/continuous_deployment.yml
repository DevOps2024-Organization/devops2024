name: Continuous Deployment
on:
  workflow_dispatch:
  push:
    branches:
      - main
concurrency: production


jobs:
  Deploy:
    needs: BuildAndTest
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/do_ssh_key
          chmod 600 ~/.ssh/do_ssh_key
        env:
          SSH_KEY: ${{ secrets.SSH_KEY }}

      - name: Deploy to server
        # Configure the ~./bash_profile and deploy.sh file on the Vagrantfile
        run: |
          echo "DB_HOST=${{ secrets.DB_HOST }}" > .env
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env
          echo "DB_DATABASE=${{ secrets.DB_DATABASE }}" >> .env
          echo "DB_USER=${{ secrets.DB_USER }}" >> .env
          echo "DB_PASS=${{ secrets.DB_PASS }}" >> .env
          mv docker-compose.prod.yml docker-compose.yml
          scp -i ~/.ssh/do_ssh_key -o StrictHostKeyChecking=no docker-compose.yml prometheus.yml .htpasswd filebeat.yml nginx.conf logstash.conf .env $SSH_USER@$SSH_HOST:~
          ssh $SSH_USER@$SSH_HOST -i ~/.ssh/do_ssh_key -o StrictHostKeyChecking=no "export DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }} && docker compose pull &&  docker stack deploy -c docker-compose.yml minitwit"
        env:
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DB_HOST_SECRET: ${{ secrets.DB_HOST }}
          DB_PORT_SECRET: ${{ secrets.DB_PORT}}

  Release:
    runs-on: ubuntu-latest
    needs: Deploy
    steps:
      - uses: actions/checkout@v2
      - name: Calculate version number
        run: ./.github/scripts/calculate_version.sh
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.NEW_VERSION }}
          release_name: Release ${{ env.NEW_VERSION }}
          draft: false
          prerelease: false
