name: Continuous Deployment
on:
  push:
    branches:
      - main


jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Create .env file
        run: |
          echo "DB_HOST=${{ secrets.DB_HOST }}" > .env
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env
          echo "DB_DATABASE=${{ secrets.DB_DATABASE }}" >> .env
          echo "DB_USER=${{ secrets.DB_USER }}" >> .env
          echo "DB_PASS=${{ secrets.DB_PASS }}" >> .env

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push minitwitimage
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/minitwitimage:latest
          cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/minitwitimage:webbuildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/minitwitimage:webbuildcache,mode=max

      - name: Test minitwit
        run: |
          docker build -t $DOCKER_USERNAME:latest -f ../api/Dockerfile-tests .
          docker run  $DOCKER_USERNAME:latest
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}

      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version:  3.9.18
      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: Run api
        run: |
          make postgrestestinit
          sleep 10
          make createdbtest
          go run api/api.go -test true &
          until curl -s http://localhost:5000/health > /dev/null; do
            sleep 1
          done
          cd api
          pytest api_test.py
          
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/do_ssh_key
          chmod 600 ~/.ssh/do_ssh_key
        env:
          SSH_KEY: ${{ secrets.SSH_KEY }}
          
      - name: Deploy to server
        # Configure the ~./bash_profile and deploy.sh file on the Vagrantfile
        run: |
          ssh $SSH_USER@$SSH_HOST -i ~/.ssh/do_ssh_key -o StrictHostKeyChecking=no 
          source ~/.bash_profile
          ls 
          echo "folder"
          ls
          docker ps
          
          docker stop minitwit-app-instance
          docker stop minitwit-api-instance
          docker rm minitwit-app-instance
          docker rm minitwit-api-instance
          docker pull ${{ secrets.DOCKER_USERNAME }}/minitwitapi:latest
          docker pull ${{ secrets.DOCKER_USERNAME }}/minitwitimage:latest
          docker run -d --name minitwit-app-instance -p 8080:8080 ${{ secrets.DOCKER_USERNAME }}/minitwitimage:latest
          docker run -d --name minitwit-api-instance -p 5000:5000 ${{ secrets.DOCKER_USERNAME }}/minitwitapi:latest
          cd /vagrant
          docker compose -f docker-compose.yml pull
          docker compose -f docker-compose.yml up -d
          pwd
          docker compose -f /vagrant/docker-compose.yml pull
          docker compose -f /vagrant/docker-compose.yml up -d
          ssh $SSH_USER@$SSH_HOST -i ~/.ssh/do_ssh_key -o StrictHostKeyChecking=no "docker compose -f /vagrant/docker-compose.yml pull && docker compose -f /vagrant/docker-compose.yml up -d"
          
        env:
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}


      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Changes in this Release
            - First Change
            - Second Change
          draft: false
          prerelease: false
