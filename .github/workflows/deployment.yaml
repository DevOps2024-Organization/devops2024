name: Continuous Deployment
on:
  push:
    branches:
      - ft/githubActions
  

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push minitwitimage
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/minitwitimage:latest

      - name: Build and push minitwitapi
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./api/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/minitwitapi:latest
        env:
          SSH_USER: ${{ secrets.SSH_USER }}

      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version:  3.9.18
      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run api
        run: |
          make postgrestestinit
          sleep 10
          make createdbtest
          go run api/api.go -test true &
          until curl -s http://localhost:5000/health > /dev/null; do
            sleep 1
          done
          cd api
          pytest api_test.py
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "dop_v1_df0ad6048853a49c3ff99c6d037601a2d9787f5c4a6dec8b07e875552c47d861" > ~/.ssh/do_ssh_key
          chmod 600 ~/.ssh/do_ssh_key


      - name: Deploy to server
        # Configure the ~./bash_profile and deploy.sh file on the Vagrantfile
        run: >
          ssh @SSH_USER$SSH_HOST
          -i ~/.ssh/do_ssh_key -o StrictHostKeyChecking=no
          docker pull ${{ secrets.DOCKER_USERNAME }}/minitwitapi:latest
          docker pull ${{ secrets.DOCKER_USERNAME }}/minitwitimage:latest
          docker run -d ${{ secrets.DOCKER_USERNAME }}/minitwitapi:latest -p 8080:8080 minitwit-app
          docker run -d ${{ secrets.DOCKER_USERNAME }}/minitwitapi:latest-p 5000:5000 minitwit-api
        env:
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
