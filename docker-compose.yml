version: "3.8"
services:
  db:
    image: 2rius/db
    build:
      dockerfile: ./database/Dockerfile
    container_name: database
    ports:
      - "5432:5432"
    networks:
      - minitwit-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "db_prod"]
      interval: 5s
      timeout: 60s
      retries: 5
      start_period: 80s
  app:
    image: 2rius/minitwitimage:latest
    build:
      dockerfile: ./Dockerfile
    container_name: minitwit-app-instance
    ports:
      - "8080:8080"
    networks:
      - minitwit-network
    env_file:
      - .env

  api:
    image: 2rius/minitwitapi:latest
    build:
      dockerfile: api/Dockerfile
    container_name: minitwit-api-instance
    ports:
      - "5000:5000"
    networks:
      - minitwit-network
    env_file:
      - .env

  prometheus:
    image: prom/prometheus
    container_name: minitwit-prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - minitwit-network
    deploy:
      placement:
        constraints:
          - node.role == manager

  grafana:
    image: grafana/grafana
    container_name: minitwit-grafana
    ports:
      - "3000:3000"
    networks:
      - minitwit-network
    depends_on:
      - prometheus

  elasticsearch:
    image: elasticsearch:7.9.3
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms2g -Xmx2g
    volumes:
      - esdata:/usr/share/elasticsearch/data

  kibana:
    image: kibana:7.9.3
    depends_on:
      - elasticsearch
    ports:
      - "5601:5601"

  logstash:
    image: logstash:7.9.3
    ports:
      - "12201:12201/udp"
    depends_on:
      - elasticsearch
    volumes:
      - logstash-pipeline:/usr/share/logstash/pipeline/

volumes:
  esdata:
    driver: local
  logstash-pipeline:
    driver: local

networks:
  minitwit-network:
    driver: bridge
