version: "3.8"
services:
  db:
    image: 2rius/db
    build:
      dockerfile: ./database/Dockerfile
    container_name: database
    ports:
      - "5432:5432"
    networks:
      - minitwit-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "db_prod"]
      interval: 5s
      timeout: 60s
      retries: 5
      start_period: 80s
  app:
    image: 2rius/minitwitimage:latest
    build:
      dockerfile: ./Dockerfile
    container_name: minitwit-app-instance
    ports:
      - "8080:8080"
    networks:
      - minitwit-network
    env_file:
      - .env
    labels:
      co.elastic.logs/enabled: true

  api:
    image: 2rius/minitwitapi:latest
    build:
      dockerfile: api/Dockerfile
    container_name: minitwit-api-instance
    ports:
      - "5000:5000"
    networks:
      - minitwit-network
    env_file:
      - .env
    labels:
      co.elastic.logs/enabled: true

  prometheus:
    image: prom/prometheus
    container_name: minitwit-prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - minitwit-network
    deploy:
      placement:
        constraints:
          - node.role == manager

  grafana:
    image: grafana/grafana
    container_name: minitwit-grafana
    ports:
      - "3000:3000"
    networks:
      - minitwit-network
    depends_on:
      - prometheus

  elasticsearch:
    image: elasticsearch:7.9.3
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms2g -Xmx2g
    ports:
      - "9200:9200"
    volumes:
      - esdata:/usr/share/elasticsearch/data

  kibana:
    image: kibana:7.9.3
    depends_on:
      - elasticsearch
    ports:
      - "5601:5601"
  
  filebeat:
    image: docker.elastic.co/beats/filebeat:7.9.3
    user: root
    volumes:
      - ./filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    depends_on:
      - logstash
    command: filebeat -e -strict.perms=false
    restart: unless-stopped

  logstash:
    image: docker.elastic.co/logstash/logstash:7.9.3
    volumes:
      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf:ro
    ports:
      - 5044:5044
    depends_on:
      - elasticsearch
    restart: unless-stopped

volumes:
  esdata:


networks:
  minitwit-network:
    driver: bridge
